{"version":3,"file":"static/js/724.d0fd05e0.chunk.js","mappings":"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","sources":["components/AddContactForm/AddContactForm.styled.ts","components/AddContactForm/AddContactForm.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.otherFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n  gap: ${({ theme }) => theme.spacing(10)};\n  align-self: center;\n  & a {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    padding: ${({ theme }) => theme.spacing()};\n    background-color: ${({ theme }) => theme.colors.btnBackgroundColor};\n    border-radius: ${({ theme }) => theme.borderRadius.secondaryBorderRadius}px;\n    border-color: transparent;\n    color: ${({ theme }) => theme.colors.primaryFontColor};\n    font-family: Inter;\n    font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n    font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n    text-decoration: none;\n    transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n    &:hover,\n    &:focus {\n      box-shadow: ${({ theme }) => theme.shadows.primaryShadow};\n    }\n  }\n`;\n","import { useEffect } from 'react';\nimport { HiPhone } from 'react-icons/hi';\nimport { FaUser } from 'react-icons/fa';\nimport { Link, useLocation } from 'react-router-dom';\nimport { GiCheckMark } from 'react-icons/gi';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport IconButton from 'components/IconButton';\nimport Input from 'components/Input';\nimport { Buttons, Form, Title } from './AddContactForm.styled';\nimport { toasts } from 'utils';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { IconBtnType } from 'constants/iconBtnType';\nimport { BtnType } from 'constants/btnType';\nimport { IContact } from 'types/types';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\n\nconst AddContactForm = () => {\n  const contacts = useAppSelector(selectContacts);\n  const isLoading = useAppSelector(selectIsLoading);\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    reset,\n  } = useForm<IContact>();\n  const location = useLocation();\n  const goBackLink = location.state?.from || '/';\n\n  useEffect(() => {\n    errors.name && toasts.errorToast('Name is required');\n    errors.number && toasts.errorToast('Phone is required');\n  }, [errors]);\n\n  const handleFormSubmit: SubmitHandler<IContact> = (data: IContact): void => {\n    const contactName = data.name;\n    const isContact = contacts.some(\n      ({ name }: IContact) => name === contactName\n    );\n    if (isContact) {\n      toasts.warnToast(`${contactName} is already in contacts`);\n      return;\n    }\n    dispatch(addContact(data))\n      .unwrap()\n      .then(() => {\n        toasts.successToast('Contact added successfully');\n        reset();\n      })\n      .catch(() => {\n        toasts.errorToast('Adding a contact failed');\n      });\n  };\n\n  return (\n    <>\n      <Title>Add contact</Title>\n      <Form onSubmit={handleSubmit(handleFormSubmit)}>\n        <Input\n          settings={{ ...register('name', { required: true, minLength: 1 }) }}\n          type=\"text\"\n          placeholder=\"Name\"\n          autoFocus\n          inputWrap\n          fieldIcon={<FaUser />}\n          fieldIconSize={18}\n        />\n        <Input\n          settings={{ ...register('number', { required: true }) }}\n          type=\"tel\"\n          placeholder=\"Phone\"\n          inputWrap\n          fieldIcon={<HiPhone />}\n          fieldIconSize={18}\n        />\n        <Buttons>\n          <IconButton\n            disabled={isLoading}\n            btnType={IconBtnType.accept}\n            width={44}\n            height={35}\n            type={BtnType.submit}\n          >\n            <GiCheckMark />\n          </IconButton>\n          <Link to={goBackLink}>Cancel</Link>\n        </Buttons>\n      </Form>\n    </>\n  );\n};\n\nexport default AddContactForm;\n"],"names":["Title","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primaryFontColor","_ref2","fontSize","otherFontSize","_ref3","fontWeight","secondaryFontWeight","Form","_templateObject2","_ref4","primaryGap","Buttons","_templateObject3","_ref5","spacing","_ref6","_ref7","btnBackgroundColor","_ref8","borderRadius","secondaryBorderRadius","_ref9","_ref10","primaryFontSize","_ref11","primaryFontWeight","_ref12","transitionDurationAndFunc","_ref13","shadows","primaryShadow","_location$state","contacts","useAppSelector","selectContacts","isLoading","selectIsLoading","dispatch","useAppDispatch","_useForm","useForm","register","errors","formState","handleSubmit","reset","goBackLink","useLocation","state","from","useEffect","name","toasts","number","_jsxs","_Fragment","children","_jsx","onSubmit","data","contactName","some","concat","addContact","unwrap","then","catch","Input","settings","_objectSpread","required","minLength","type","placeholder","autoFocus","inputWrap","fieldIcon","FaUser","fieldIconSize","HiPhone","IconButton","disabled","btnType","IconBtnType","width","height","BtnType","GiCheckMark","Link","to"],"sourceRoot":""}