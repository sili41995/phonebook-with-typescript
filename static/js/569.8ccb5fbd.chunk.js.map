{"version":3,"file":"static/js/569.8ccb5fbd.chunk.js","mappings":"uMAEaA,E,QAAcC,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FACxB,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,OAAOC,gBAAgB,IAExC,SAAAC,GAAQ,OAAAA,EAALH,MAAkBI,SAASC,eAAe,IAC3C,SAAAC,GAAQ,OAAAA,EAALN,MAAkBO,WAAWC,iBAAiB,I,8BCKlE,EAP2B,WACzB,IAAMC,GAAgBC,EAAAA,EAAAA,KACdC,GAAgBC,EAAAA,EAAAA,IAAeH,GAA/BE,YAER,OAAOE,EAAAA,EAAAA,KAAClB,EAAW,CAAAmB,SAAEH,GACvB,C,uJCsBA,EAxByB,WACvB,IAAAI,GAAkCC,EAAAA,EAAAA,UAAwB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,EAAI,IAAAC,OAAOC,EAAAA,EAAAA,aAAyBJ,GAgB1C,OAdAK,EAAAA,EAAAA,YAAU,WACJX,GACFE,GAASU,EAAAA,EAAAA,IAAcZ,IACpBa,SACAC,MAAK,WACJV,EAASI,GACTO,EAAAA,GAAAA,aAAoB,+BACtB,IACCC,OAAM,WACLD,EAAAA,GAAAA,WAAkB,4BACpB,GAEN,GAAG,CAACf,EAAWE,EAAUE,EAAUI,IAE5BP,CACT,E,UCVA,EAbyB,WACvB,IAAMgB,GAAKC,EAAAA,EAAAA,MAAYR,EAAAA,EAAAA,cAEjBpB,GADuB6B,EAAAA,EAAAA,GAAeC,EAAAA,IACbC,MAAK,SAAAzC,GAAK,OAAWA,EAAbqC,KAAkCA,CAAE,IAO3E,OAAO3B,GANgB,CACrB2B,GAAI,GACJK,KAAM,GACNC,OAAQ,GAIZ,C","sources":["components/ContactDescription/ContactDescription.styled.ts","components/ContactDescription/ContactDescription.tsx","hooks/useDeleteContact.ts","hooks/useTargetContact.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Description = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n","import { Description } from './ContactDescription.styled';\nimport { useTargetContact } from 'hooks';\nimport { getContactInfo } from 'utils';\n\nconst ContactDescription = () => {\n  const targetContact = useTargetContact();\n  const { description } = getContactInfo(targetContact);\n\n  return <Description>{description}</Description>;\n};\n\nexport default ContactDescription;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { toasts } from 'utils';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useAppDispatch } from 'hooks/redux';\nimport { PagesPath } from 'constants/pagesPath';\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${PagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          navigate(path);\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { PagesPath } from 'constants/pagesPath';\nimport { useParams } from 'react-router-dom';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useAppSelector } from './redux';\nimport { IContact } from 'types/types';\n\nconst useTargetContact = (): IContact => {\n  const id = useParams()[PagesPath.dynamicParam];\n  const contacts: IContact[] = useAppSelector(selectContacts);\n  const targetContact = contacts.find(({ id: contactId }) => contactId === id);\n  const defaultContact = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  return targetContact ? targetContact : defaultContact;\n};\n\nexport default useTargetContact;\n"],"names":["Description","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primaryFontColor","_ref2","fontSize","primaryFontSize","_ref3","fontWeight","primaryFontWeight","targetContact","useTargetContact","description","getContactInfo","_jsx","children","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","dispatch","useAppDispatch","navigate","useNavigate","search","useLocation","path","concat","PagesPath","useEffect","deleteContact","unwrap","then","toasts","catch","id","useParams","useAppSelector","selectContacts","find","name","number"],"sourceRoot":""}