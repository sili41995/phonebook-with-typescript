{"version":3,"file":"static/js/6.8385a8dc.chunk.js","mappings":"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","sources":["components/AuthForm/AuthForm.styled.ts","components/AuthForm/AuthForm.tsx","components/AuthFormMessage/AuthFormMessage.styled.ts","components/AuthFormMessage/AuthFormMessage.tsx","components/RegisterForm/RegisterForm.styled.ts","components/RegisterForm/RegisterForm.tsx","pages/RegisterPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormContainer = styled.div`\n  width: 600px;\n  display: flex;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.authFormBackgroundColor};\n  padding: ${({ theme }) => theme.padding.paddingAuthForm}px;\n  margin: ${({ theme }) => theme.spacing(10)} auto;\n  border-radius: ${({ theme }) => theme.borderRadius.otherBorderRadius}px;\n  box-shadow: ${({ theme }) => theme.shadows.secondaryShadow};\n`;\n","import { FormContainer } from './AuthForm.styled';\nimport { IProps } from './AuthForm.types';\n\nconst AuthForm = ({ children }: IProps) => (\n  <FormContainer>{children}</FormContainer>\n);\n\nexport default AuthForm;\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  & a {\n    color: ${({ theme }) => theme.colors.primaryColor};\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport { Message } from './AuthFormMessage.styled';\nimport { IProps } from './AuthFormMessage.types';\n\nexport const AuthFormMessage = ({ message, pageLink, action }: IProps) => (\n  <Message>\n    <Link to={pageLink}>{action}</Link>\n    {message}\n  </Message>\n);\n\nexport default AuthFormMessage;\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.titleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const Button = styled.button`\n  display: block;\n  min-width: 170px;\n  padding: ${({ theme }) => `${theme.spacing(4)} ${theme.spacing(8)}`};\n  align-self: center;\n  background-color: ${({ theme }) => theme.colors.primaryColor};\n  border-color: transparent;\n  border-radius: ${({ theme }) => theme.borderRadius.primaryBorderRadius}px;\n  color: #fff;\n  text-align: center;\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  line-height: 1.5;\n  letter-spacing: 0.64px;\n  transition: background-color ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.colors.secondaryColor};\n  }\n`;\n","import { FaUser } from 'react-icons/fa';\nimport { MdEmail } from 'react-icons/md';\nimport { AiFillLock } from 'react-icons/ai';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Form, Button, Message, Title } from './RegisterForm.styled';\nimport { toasts } from 'utils';\nimport AuthFormMessage from 'components/AuthFormMessage';\nimport Input from 'components/Input';\nimport { registerUser } from 'redux/auth/operations';\nimport { selectIsLoading } from 'redux/auth/selectors';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\nimport { ICredentials } from 'types/types';\nimport { PagesPath } from 'constants/pagesPath';\nimport { FormType } from 'constants/formType';\nimport { useEffect } from 'react';\n\nconst RegisterForm = () => {\n  const isLoading = useAppSelector(selectIsLoading);\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    formState: { errors, isSubmitting },\n    handleSubmit,\n  } = useForm<ICredentials>();\n  const pageLink = `/${PagesPath.loginPath}`;\n\n  const onSubmit: SubmitHandler<ICredentials> = (data) => {\n    dispatch(registerUser(data))\n      .unwrap()\n      .then(() => {\n        toasts.successToast('Hello, my friend!');\n      })\n      .catch((error) => {\n        toasts.errorToast(error);\n      });\n  };\n\n  useEffect(() => {\n    if (isSubmitting) {\n      errors.name && toasts.errorToast('Username is required');\n      errors.email && toasts.errorToast('Email is required');\n      errors.password &&\n        toasts.errorToast(\n          errors.password.type === 'required'\n            ? 'Password is required'\n            : 'Password minimum length is 7 characters'\n        );\n    }\n  }, [errors, isSubmitting]);\n\n  return (\n    <>\n      <Title>sign up</Title>\n      <Message>Welcome to Phonebook!</Message>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          settings={{ ...register('name', { required: true }) }}\n          type=\"text\"\n          placeholder=\"Username\"\n          inputType={FormType.authForm}\n          autoFocus\n          inputWrap\n          fieldIcon={<FaUser />}\n          fieldIconSize={20}\n        />\n        <Input\n          settings={{ ...register('email', { required: true }) }}\n          type=\"email\"\n          placeholder=\"Email\"\n          inputType={FormType.authForm}\n          inputWrap\n          fieldIcon={<MdEmail />}\n          fieldIconSize={20}\n        />\n        <Input\n          settings={{\n            ...register('password', { required: true, minLength: 7 }),\n          }}\n          type=\"password\"\n          placeholder=\"Password\"\n          inputType={FormType.authForm}\n          inputWrap\n          fieldIcon={<AiFillLock />}\n          fieldIconSize={20}\n        />\n        <AuthFormMessage\n          action={'Log in'}\n          pageLink={pageLink}\n          message={'if you have an account'}\n        />\n        <Button disabled={isLoading} type=\"submit\">\n          Enlist\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import AuthForm from 'components/AuthForm';\nimport RegisterForm from 'components/RegisterForm';\n\nconst RegisterPage = () => (\n  <AuthForm>\n    <RegisterForm />\n  </AuthForm>\n);\n\nexport default RegisterPage;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","primaryGap","_ref2","colors","authFormBackgroundColor","_ref3","padding","paddingAuthForm","_ref4","spacing","_ref5","borderRadius","otherBorderRadius","_ref6","shadows","secondaryShadow","children","_jsx","Message","primaryFontColor","fontSize","secondaryFontSize","fontWeight","primaryFontWeight","primaryColor","message","pageLink","action","_jsxs","Link","to","Title","titleFontSize","Form","_templateObject2","_templateObject3","_ref7","Button","_templateObject4","_ref8","concat","_ref9","_ref10","primaryBorderRadius","_ref11","primaryFontSize","_ref12","_ref13","transitionDurationAndFunc","_ref14","secondaryColor","isLoading","useAppSelector","selectIsLoading","dispatch","useAppDispatch","_useForm","useForm","register","_useForm$formState","formState","errors","isSubmitting","handleSubmit","PagesPath","useEffect","name","toasts","email","password","type","_Fragment","onSubmit","data","registerUser","unwrap","then","catch","error","Input","settings","_objectSpread","required","placeholder","inputType","FormType","autoFocus","inputWrap","fieldIcon","FaUser","fieldIconSize","MdEmail","minLength","AiFillLock","AuthFormMessage","disabled","AuthForm","RegisterForm"],"sourceRoot":""}