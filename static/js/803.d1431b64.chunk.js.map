{"version":3,"file":"static/js/803.d1431b64.chunk.js","mappings":"yPAEaA,EAAYC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oEAG1B,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,QAAQ,GAAG,IAG5BC,EAAQN,EAAAA,EAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+DAKlBM,EAAWR,EAAAA,EAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,QAErBQ,EAAWV,EAAAA,EAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0FACrB,SAAAU,GAAQ,OAAAA,EAALR,MAAkBS,OAAOC,kBAAkB,IAE1C,SAAAC,GAAQ,OAAAA,EAALX,MAAkBY,SAASC,eAAe,IAC3C,SAAAC,GAAQ,OAAAA,EAALd,MAAkBe,WAAWC,iBAAiB,IAGrDC,EAAWrB,EAAAA,EAAAA,EAAQsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,0FACrB,SAAAqB,GAAQ,OAAAA,EAALnB,MAAkBS,OAAOW,gBAAgB,IAExC,SAAAC,GAAQ,OAAAA,EAALrB,MAAkBY,SAASC,eAAe,IAC3C,SAAAS,GAAQ,OAAAA,EAALtB,MAAkBe,WAAWC,iBAAiB,I,UCtBrDO,EAAO3B,EAAAA,EAAAA,EAAQC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mWAMf,SAAAC,GAAQ,OAAAA,EAALC,MAAkBC,SAAS,IACrB,SAAAO,GAAA,IAAGgB,EAAOhB,EAAPgB,QAAO,OAAqBC,EAAAA,EAAAA,IAAeD,EAAQ,IACzD,SAAAb,GAAQ,OAAAA,EAALX,MAAkB0B,aAAaC,qBAAqB,IAC/C,SAAAb,GAAQ,OAAAA,EAALd,MAAkB4B,yBAAyB,IAGvD,SAAAT,GAAQ,OAAAA,EAALnB,MAAkB6B,QAAQC,aAAa,IAKhD,SAAAT,GAAA,IAAGG,EAAOH,EAAPG,QAAO,OAAOO,EAAAA,EAAAA,IAAYP,EAAQ,I,UCJjD,EAZ+B,SAAHzB,GAAqC,IAA/BiC,EAAIjC,EAAJiC,KAAMC,EAAQlC,EAARkC,SAAUT,EAAOzB,EAAPyB,QAKhD,OACEU,EAAAA,EAAAA,KAACX,EAAI,CAACC,QAASA,EAASW,KAAMH,EAAMI,QALnB,SAACC,IAClBC,EAAAA,EAAAA,IAASD,EAAEE,cACb,EAG0DN,SACrDA,GAGP,E,oBCyCA,EAzCoB,WAClB,IAAMO,GAAgBC,EAAAA,EAAAA,KACtBC,GAAgCC,EAAAA,EAAAA,IAAeH,GAAvCI,EAAMF,EAANE,OAAQC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KACjBC,GAAcC,EAAAA,EAAAA,IAAeJ,GAEnC,OACEK,EAAAA,EAAAA,MAACtD,EAAS,CAAAsC,SAAA,EACRgB,EAAAA,EAAAA,MAAC/C,EAAK,CAAA+B,SAAA,EACJgB,EAAAA,EAAAA,MAAC7C,EAAQ,CAAA6B,SAAA,EACPC,EAAAA,EAAAA,KAAC5B,EAAQ,CAAA2B,SAAC,kBACVC,EAAAA,EAAAA,KAACjB,EAAQ,CAAAgB,SAAEW,QAEbV,EAAAA,EAAAA,KAACgB,EAAU,CAAClB,KAAI,OAAAmB,OAASJ,GAAevB,QAAS4B,EAAAA,EAAAA,MAAkBnB,UACjEC,EAAAA,EAAAA,KAACmB,EAAAA,IAAc,UAGnBJ,EAAAA,EAAAA,MAAC/C,EAAK,CAAA+B,SAAA,EACJgB,EAAAA,EAAAA,MAAC7C,EAAQ,CAAA6B,SAAA,EACPC,EAAAA,EAAAA,KAAC5B,EAAQ,CAAA2B,SAAC,mBACVC,EAAAA,EAAAA,KAACjB,EAAQ,CAAAgB,SAAEY,QAEbX,EAAAA,EAAAA,KAACgB,EAAU,CAAClB,KAAI,UAAAmB,OAAYN,GAASrB,QAAS4B,EAAAA,EAAAA,QAAoBnB,UAChEC,EAAAA,EAAAA,KAACoB,EAAAA,IAAQ,UAGbL,EAAAA,EAAAA,MAAC/C,EAAK,CAAA+B,SAAA,EACJgB,EAAAA,EAAAA,MAAC7C,EAAQ,CAAA6B,SAAA,EACPC,EAAAA,EAAAA,KAAC5B,EAAQ,CAAA2B,SAAC,UACVC,EAAAA,EAAAA,KAACjB,EAAQ,CAAAgB,SAAEa,QAEbZ,EAAAA,EAAAA,KAACgB,EAAU,CACTlB,KAAI,uBAAAmB,OAAyBL,GAC7BtB,QAAS4B,EAAAA,EAAAA,KAAiBnB,UAE1BC,EAAAA,EAAAA,KAACqB,EAAAA,IAAW,WAKtB,C,uJCvBA,EAxByB,WACvB,IAAAC,GAAkCC,EAAAA,EAAAA,UAAwB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAAXD,OACFE,EAAI,IAAAjB,OAAOkB,EAAAA,EAAAA,aAAyBH,GAgB1C,OAdAI,EAAAA,EAAAA,YAAU,WACJV,GACFE,GAASS,EAAAA,EAAAA,IAAcX,IACpBY,SACAC,MAAK,WACJT,EAASI,GACTM,EAAAA,GAAAA,aAAoB,+BACtB,IACCC,OAAM,WACLD,EAAAA,GAAAA,WAAkB,4BACpB,GAEN,GAAG,CAACd,EAAWE,EAAUE,EAAUI,IAE5BP,CACT,E,UCVA,EAbyB,WACvB,IAAMe,GAAKC,EAAAA,EAAAA,MAAYR,EAAAA,EAAAA,cAEjB7B,GADuBsC,EAAAA,EAAAA,GAAeC,EAAAA,IACbC,MAAK,SAAAjF,GAAK,OAAWA,EAAb6E,KAAkCA,CAAE,IAO3E,OAAOpC,GANgB,CACrBoC,GAAI,GACJK,KAAM,GACNrC,OAAQ,GAIZ,C","sources":["components/ContactData/ContactData.styled.ts","components/ActionLink/ActionLink.styled.ts","components/ActionLink/ActionLink.tsx","components/ContactData/ContactData.tsx","hooks/useDeleteContact.ts","hooks/useTargetContact.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.spacing(10)};\n`;\n\nexport const Field = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const InfoWrap = styled.div``;\n\nexport const InfoDesc = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n\nexport const InfoData = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n`;\n","import styled from '@emotion/styled';\nimport { setButtonColor, setIconFill } from 'utils';\nimport { IStyledProps } from './ActionLink.types';\n\nexport const Link = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 44px;\n  height: 35px;\n  padding: ${({ theme }) => theme.spacing()};\n  background-color: ${({ btnType }: IStyledProps) => setButtonColor(btnType)};\n  border-radius: ${({ theme }) => theme.borderRadius.secondaryBorderRadius}px;\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.primaryShadow};\n  }\n  & svg {\n    width: 100%;\n    height: 100%;\n    fill: ${({ btnType }) => setIconFill(btnType)};\n    stroke: inherit;\n  }\n`;\n","import { FC, MouseEvent } from 'react';\nimport { Link } from './ActionLink.styled';\nimport { IProps } from './ActionLink.types';\nimport { makeBlur } from 'utils';\n\nconst ActionLink: FC<IProps> = ({ link, children, btnType }) => {\n  const onBtnClick = (e: MouseEvent<HTMLAnchorElement>) => {\n    makeBlur(e.currentTarget);\n  };\n\n  return (\n    <Link btnType={btnType} href={link} onClick={onBtnClick}>\n      {children}\n    </Link>\n  );\n};\n\nexport default ActionLink;\n","import { HiOutlinePhone } from 'react-icons/hi';\nimport { IoMdMail } from 'react-icons/io';\nimport { RiChat1Line } from 'react-icons/ri';\nimport {\n  InfoDesc,\n  InfoData,\n  Container,\n  Field,\n  InfoWrap,\n} from './ContactData.styled';\nimport ActionLink from 'components/ActionLink';\nimport { getContactInfo, getPhoneNumber } from 'utils';\nimport { useTargetContact } from 'hooks';\nimport { IconBtnType } from 'constants/iconBtnType';\n\nconst ContactData = () => {\n  const targetContact = useTargetContact();\n  const { number, email, chat } = getContactInfo(targetContact);\n  const phoneNumber = getPhoneNumber(number);\n\n  return (\n    <Container>\n      <Field>\n        <InfoWrap>\n          <InfoDesc>Phone number</InfoDesc>\n          <InfoData>{number}</InfoData>\n        </InfoWrap>\n        <ActionLink link={`tel:${phoneNumber}`} btnType={IconBtnType.phone}>\n          <HiOutlinePhone />\n        </ActionLink>\n      </Field>\n      <Field>\n        <InfoWrap>\n          <InfoDesc>Email Address</InfoDesc>\n          <InfoData>{email}</InfoData>\n        </InfoWrap>\n        <ActionLink link={`mailto:${email}`} btnType={IconBtnType.message}>\n          <IoMdMail />\n        </ActionLink>\n      </Field>\n      <Field>\n        <InfoWrap>\n          <InfoDesc>Chat</InfoDesc>\n          <InfoData>{chat}</InfoData>\n        </InfoWrap>\n        <ActionLink\n          link={`tg://resolve?domain=${chat}`}\n          btnType={IconBtnType.chat}\n        >\n          <RiChat1Line />\n        </ActionLink>\n      </Field>\n    </Container>\n  );\n};\n\nexport default ContactData;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { toasts } from 'utils';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useAppDispatch } from 'hooks/redux';\nimport { PagesPath } from 'constants/pagesPath';\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${PagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          navigate(path);\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { PagesPath } from 'constants/pagesPath';\nimport { useParams } from 'react-router-dom';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useAppSelector } from './redux';\nimport { IContact } from 'types/types';\n\nconst useTargetContact = (): IContact => {\n  const id = useParams()[PagesPath.dynamicParam];\n  const contacts: IContact[] = useAppSelector(selectContacts);\n  const targetContact = contacts.find(({ id: contactId }) => contactId === id);\n  const defaultContact = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  return targetContact ? targetContact : defaultContact;\n};\n\nexport default useTargetContact;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","spacing","Field","_templateObject2","InfoWrap","_templateObject3","InfoDesc","_templateObject4","_ref2","colors","secondaryFontColor","_ref3","fontSize","primaryFontSize","_ref4","fontWeight","primaryFontWeight","InfoData","_templateObject5","_ref5","primaryFontColor","_ref6","_ref7","Link","btnType","setButtonColor","borderRadius","secondaryBorderRadius","transitionDurationAndFunc","shadows","primaryShadow","setIconFill","link","children","_jsx","href","onClick","e","makeBlur","currentTarget","targetContact","useTargetContact","_getContactInfo","getContactInfo","number","email","chat","phoneNumber","getPhoneNumber","_jsxs","ActionLink","concat","IconBtnType","HiOutlinePhone","IoMdMail","RiChat1Line","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","dispatch","useAppDispatch","navigate","useNavigate","search","useLocation","path","PagesPath","useEffect","deleteContact","unwrap","then","toasts","catch","id","useParams","useAppSelector","selectContacts","find","name"],"sourceRoot":""}