{"version":3,"file":"static/js/693.dc3b4d23.chunk.js","mappings":"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","sources":["components/DefaultMessage/DefaultMessage.styled.ts","components/DefaultMessage/DefaultMessage.tsx","hooks/useDeleteContact.ts","hooks/useTargetContact.ts","components/ContactsListItem/ContactsListItem.styled.ts","components/ContactsListItem/ContactsListItem.tsx","components/ContactsList/ContactsList.styled.ts","components/ContactsList/ContactsList.tsx","components/UserProfile/UserProfile.styled.ts","components/UserProfile/UserProfile.tsx","pages/ContactsPage.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n`;\n","import { Message } from './DefaultMessage.styled';\nimport { IProps } from './DefaultMessage.types';\n\nconst EmptyListMessage = ({ message }: IProps) => <Message>{message}</Message>;\n\nexport default EmptyListMessage;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { toasts } from 'utils';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useAppDispatch } from 'hooks/redux';\nimport { PagesPath } from 'constants/pagesPath';\n\nconst useDeleteContact = () => {\n  const [contactId, setContactId] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const { search } = useLocation();\n  const path = `/${PagesPath.contactsPath + search}`;\n\n  useEffect(() => {\n    if (contactId) {\n      dispatch(deleteContact(contactId))\n        .unwrap()\n        .then(() => {\n          navigate(path);\n          toasts.successToast('Contact successfully removed');\n        })\n        .catch(() => {\n          toasts.errorToast('Deleting a contact failed');\n        });\n    }\n  }, [contactId, dispatch, navigate, path]);\n\n  return setContactId;\n};\n\nexport default useDeleteContact;\n","import { PagesPath } from 'constants/pagesPath';\nimport { useParams } from 'react-router-dom';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useAppSelector } from './redux';\nimport { IContact } from 'types/types';\n\nconst useTargetContact = (): IContact => {\n  const id = useParams()[PagesPath.dynamicParam];\n  const contacts: IContact[] = useAppSelector(selectContacts);\n  const targetContact = contacts.find(({ id: contactId }) => contactId === id);\n  const defaultContact = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  return targetContact ? targetContact : defaultContact;\n};\n\nexport default useTargetContact;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  position: relative;\n  align-items: center;\n  border-radius: ${({ theme }) => theme.borderRadius.secondaryBorderRadius}px;\n  border: 0.5px solid;\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  transition: box-shadow ${({ theme }) => theme.transitionDurationAndFunc};\n  &:hover,\n  &:focus {\n    box-shadow: ${({ theme }) => theme.shadows.primaryShadow};\n  }\n  & a {\n    padding: ${({ theme }) => theme.spacing(3)};\n    display: flex;\n    gap: ${({ theme }) => theme.primaryGap}px;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.primaryFontColor};\n  }\n`;\n\nexport const Image = styled.img`\n  width: 70px;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  gap: ${({ theme }) => theme.primaryGap}px;\n  align-items: center;\n  & div {\n    flex-basis: calc((100% - ${({ theme }) => theme.primaryGap}*2px) / 3);\n  }\n`;\n\nexport const Person = styled.div``;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.otherFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  color: ${({ theme }) => theme.colors.contactPrimaryTextColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Phone = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: ${({ theme }) => theme.colors.contactSecondaryTextColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.secondaryFontWeight};\n  text-align: center;\n`;\n","import { AiOutlineDelete } from 'react-icons/ai';\nimport IconButton from 'components/IconButton';\nimport LinkWithQuery from 'components/LinkWithQuery/LinkWithQuery';\nimport { getContactInfo } from 'utils';\nimport { useDeleteContact } from 'hooks';\nimport {\n  Email,\n  Image,\n  Item,\n  Role,\n  Name,\n  Phone,\n  ContactInfo,\n  Person,\n} from './ContactsListItem.styled';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { useAppSelector } from 'hooks/redux';\nimport { IProps } from './ContactsListItem.types';\nimport { PagesPath } from 'constants/pagesPath';\nimport { IconBtnType } from 'constants/iconBtnType';\n\nconst ContactsListItem = ({ contact }: IProps) => {\n  const { userAvatar, name, id, role, number, email } = getContactInfo(contact);\n  const isLoading = useAppSelector(selectIsLoading);\n  const deleteContact = useDeleteContact();\n  const path = `${PagesPath.contactDetailsPath}/${id}/${PagesPath.contactPath}`;\n\n  const handleDelBtnClick = () => {\n    if (id) {\n      deleteContact(id);\n    }\n  };\n\n  return (\n    <Item>\n      <LinkWithQuery to={path}>\n        <Image src={userAvatar} alt={name} />\n        <ContactInfo>\n          <Person>\n            <Name>{name}</Name>\n            <Role>{role}</Role>\n          </Person>\n          <Phone>{number}</Phone>\n          <Email>{email}</Email>\n        </ContactInfo>\n      </LinkWithQuery>\n      <IconButton\n        top={0}\n        right={0}\n        position=\"absolute\"\n        disabled={isLoading}\n        btnType={IconBtnType.deleteTransparent}\n        width={44}\n        height={35}\n        onBtnClick={handleDelBtnClick}\n      >\n        <AiOutlineDelete />\n      </IconButton>\n    </Item>\n  );\n};\n\nexport default ContactsListItem;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 650px;\n  flex-shrink: 0;\n`;\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: ${({ theme }) => theme.primaryGap}px;\n`;\n","import { useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport ContactsListItem from 'components/ContactsListItem';\nimport DefaultMessage from 'components/DefaultMessage';\nimport { Container, List } from './ContactsList.styled';\nimport { filterContactsByName, sortContactsByName } from 'utils';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { useAppSelector } from 'hooks/redux';\nimport { SearchParamsKeys } from 'constants/searchParamsKeys';\n\nconst { FILTER_SP_KEY, SORT_SP_KEY } = SearchParamsKeys;\n\nconst ContactsList = () => {\n  const contacts = useAppSelector(selectContacts);\n  const [searchParams] = useSearchParams();\n  const filter = searchParams.get(FILTER_SP_KEY) ?? '';\n  const sortType = searchParams.get(SORT_SP_KEY) ?? '';\n\n  const filteredContacts = useMemo(() => {\n    const sortedContacts = sortContactsByName(contacts, sortType);\n    return filterContactsByName(sortedContacts, filter);\n  }, [contacts, filter, sortType]);\n\n  return (\n    <Container>\n      {!!contacts.length ? (\n        <List>\n          {filteredContacts.map((contact) => (\n            <ContactsListItem contact={contact} key={contact.id} />\n          ))}\n        </List>\n      ) : (\n        <DefaultMessage message=\"Contact list is empty\" />\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const UserProfileContainer = styled.div`\n  flex-shrink: 0;\n`;\n\nexport const Image = styled.img`\n  width: 150px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Name = styled.p`\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.titleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n`;\n\nexport const UserData = styled.div`\n  margin-top: ${({ theme }) => theme.spacing(7)};\n  margin-bottom: ${({ theme }) => theme.spacing(16)};\n`;\n\nexport const UserInfo = styled.div``;\n\nexport const FullName = styled.p`\n  margin-top: ${({ theme }) => theme.spacing(2)};\n  margin-bottom: ${({ theme }) => theme.spacing()};\n  color: ${({ theme }) => theme.colors.primaryFontColor};\n  font-family: Jua;\n  font-size: ${({ theme }) => theme.fontSize.subtitleFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.otherFontWeight};\n  text-align: center;\n`;\n\nexport const Email = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.secondaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  text-align: center;\n`;\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(3)};\n  color: ${({ theme }) => theme.colors.secondaryFontColor};\n  font-family: Inter;\n  font-size: ${({ theme }) => theme.fontSize.primaryFontSize}px;\n  font-weight: ${({ theme }) => theme.fontWeight.primaryFontWeight};\n  &:not(:last-child) {\n    margin-bottom: ${({ theme }) => theme.spacing(6)};\n  }\n`;\n\nexport const ContactInfoIconWrap = styled.span`\n  display: flex;\n  align-items: center;\n  & svg {\n    width: 22px;\n    height: 22px;\n  }\n`;\n","import { AiOutlineCalendar } from 'react-icons/ai';\nimport { HiOutlinePhone } from 'react-icons/hi';\nimport { SlLocationPin } from 'react-icons/sl';\nimport { getUserInfo } from 'utils';\nimport {\n  UserInfo,\n  Email,\n  FullName,\n  Image,\n  Name,\n  ContactInfo,\n  UserData,\n  ContactInfoIconWrap,\n  UserProfileContainer,\n} from './UserProfile.styled';\nimport { selectUser } from 'redux/auth/selectors';\nimport { useAppSelector } from 'hooks/redux';\n\nconst UserProfile = () => {\n  const user = useAppSelector(selectUser);\n  const {\n    name,\n    userAvatar,\n    userName,\n    email,\n    dateOfBirth,\n    phoneNumber,\n    location,\n  } = getUserInfo(user);\n\n  return (\n    <UserProfileContainer>\n      <Name>{name}</Name>\n      <UserData>\n        <Image src={userAvatar} alt=\"user avatar\" />\n        <FullName>{userName}</FullName>\n        <Email>{email}</Email>\n      </UserData>\n      <UserInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <AiOutlineCalendar />\n          </ContactInfoIconWrap>\n          {dateOfBirth}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <HiOutlinePhone />\n          </ContactInfoIconWrap>\n          {phoneNumber}\n        </ContactInfo>\n        <ContactInfo>\n          <ContactInfoIconWrap>\n            <SlLocationPin />\n          </ContactInfoIconWrap>\n          {location}\n        </ContactInfo>\n      </UserInfo>\n    </UserProfileContainer>\n  );\n};\n\nexport default UserProfile;\n","import { Suspense, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport ContactsList from 'components/ContactsList';\nimport UserProfile from 'components/UserProfile';\nimport Loader from 'components/Loader';\nimport { selectIsLoaded } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useAppDispatch, useAppSelector } from 'hooks/redux';\n\nconst ContactsPage = () => {\n  const dispatch = useAppDispatch();\n  const isLoaded = useAppSelector(selectIsLoaded);\n\n  useEffect(() => {\n    const promise = dispatch(fetchContacts());\n\n    return () => {\n      promise.abort();\n    };\n  }, [dispatch]);\n\n  return (\n    <>\n      <UserProfile />\n      {isLoaded && <ContactsList />}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Message","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primaryFontColor","_ref2","fontSize","secondaryFontSize","_ref3","fontWeight","otherFontWeight","message","_jsx","children","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","dispatch","useAppDispatch","navigate","useNavigate","search","useLocation","path","concat","PagesPath","useEffect","deleteContact","unwrap","then","toasts","catch","id","useParams","targetContact","useAppSelector","selectContacts","find","name","number","Item","borderRadius","secondaryBorderRadius","borderColor","transitionDurationAndFunc","_ref4","shadows","primaryShadow","_ref5","spacing","_ref6","primaryGap","_ref7","Image","_templateObject2","ContactInfo","_templateObject3","_ref8","_ref9","Person","_templateObject4","Name","_templateObject5","_ref10","_ref11","otherFontSize","_ref12","secondaryFontWeight","Role","_templateObject6","_ref13","contactPrimaryTextColor","_ref14","primaryFontSize","_ref15","primaryFontWeight","Phone","_templateObject7","_ref16","_ref17","_ref18","Email","_templateObject8","_ref19","contactSecondaryTextColor","_ref20","_ref21","contact","_getContactInfo","getContactInfo","userAvatar","role","email","isLoading","selectIsLoading","useDeleteContact","_jsxs","LinkWithQuery","to","src","alt","IconButton","top","right","position","disabled","btnType","IconBtnType","width","height","onBtnClick","AiOutlineDelete","Container","List","FILTER_SP_KEY","SearchParamsKeys","SORT_SP_KEY","_searchParams$get","_searchParams$get2","contacts","_useSearchParams","useSearchParams","searchParams","filter","get","sortType","filteredContacts","useMemo","sortedContacts","sortContactsByName","filterContactsByName","length","map","ContactsListItem","DefaultMessage","UserProfileContainer","titleFontSize","UserData","UserInfo","FullName","subtitleFontSize","secondaryFontColor","ContactInfoIconWrap","_templateObject9","user","selectUser","_getUserInfo","getUserInfo","userName","dateOfBirth","phoneNumber","location","AiOutlineCalendar","HiOutlinePhone","SlLocationPin","isLoaded","selectIsLoaded","promise","fetchContacts","abort","_Fragment","UserProfile","ContactsList","Suspense","fallback","Loader","Outlet"],"sourceRoot":""}